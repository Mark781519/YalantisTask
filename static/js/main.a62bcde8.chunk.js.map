{"version":3,"sources":["api.js","hooks/useLocalStorage.js","context/AppContext.jsx","components/employeesList/EmployeeBlock.jsx","components/employeesList/LetterBlock.jsx","components/employeesList/Employees list.jsx","components/birthdayList/Month.jsx","components/birthdayList/Birthday list.jsx","components/Employees.jsx","App.jsx","index.jsx"],"names":["a","axios","method","url","response","data","getData","useLocalStorage","key","initVal","serialize","JSON","stringify","desirialize","parse","useState","val","localStorage","getItem","state","setState","keyRef","useRef","useEffect","prevKey","current","removeItem","setItem","AppStateContext","createContext","AppDispatchContext","initialState","activeList","employeesList","loading","error","reducer","action","type","cachedData","includes","value","filter","el","id","Error","AppStateProvider","children","useReducer","dispatch","Provider","useAppContext","context","useContext","useDispatchContext","EmployeeBlock","employee","toggleActive","useToggleActive","toggleNotActive","useToggleNotActive","isActive","map","className","firstName","lastName","checked","onChange","htmlFor","letterDataSort","sortWith","ascend","prop","LetterBlock","letter","letterData","toLowerCase","substr","length","EmployeesList","monthArraySort","monthNames","options","month","getOwnDate","date","d1","Date","getDate","toLocaleString","getFullYear","Month","monthArray","dob","getMonth","getBirthMonth","d","setMonth","BirthdayList","Employees","loadEmployees","storageData","useCallback","then","Array","isArray","useLoadEmployees","setCachedData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a62bcde8.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nasync function getData() {\r\n  try {\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: \"https://yalantis-react-school-api.yalantis.com/api/task0/users\",\r\n    })\r\n    return response.data\r\n  } catch (error) {\r\n    return \"error\"\r\n  }\r\n}\r\n\r\nexport default getData\r\n","import {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction useLocalStorage(\r\n  key,\r\n  initVal = \"\",\r\n  {serialize = JSON.stringify, desirialize = JSON.parse} = {},\r\n) {\r\n  const [state, setState] = useState(() => {\r\n    const val = localStorage.getItem(key)\r\n    if (val) {\r\n      return desirialize(val)\r\n    }\r\n    return typeof initVal === \"function\" ? initVal() : initVal\r\n  })\r\n\r\n  const keyRef = useRef(key)\r\n\r\n  useEffect(() => {\r\n    const prevKey = keyRef.current\r\n    if (prevKey !== key) {\r\n      localStorage.removeItem(prevKey)\r\n    }\r\n    keyRef.current = key\r\n    localStorage.setItem(key, serialize(state))\r\n  }, [state, key, serialize])\r\n\r\n  return [state, setState]\r\n}\r\n\r\nexport default useLocalStorage\r\n","import {useReducer, createContext, useContext, useCallback} from \"react\"\r\nimport getData from \"../api\"\r\nimport useLocalStorage from \"../hooks/useLocalStorage\"\r\n\r\nconst AppStateContext = createContext()\r\nconst AppDispatchContext = createContext()\r\n\r\nconst initialState = {\r\n  activeList: [],\r\n  employeesList: [],\r\n  loading: true,\r\n  error: false,\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"showEmployees\":\r\n      return {\r\n        ...state,\r\n        employeesList: action.data,\r\n        loading: false,\r\n      }\r\n    case \"getDataFromCache\":\r\n      return {\r\n        ...state,\r\n        activeList: action.cachedData,\r\n      }\r\n    case \"catchError\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      }\r\n\r\n    case \"toggleActive\":\r\n      return {\r\n        ...state,\r\n        activeList: state.activeList.includes(action.value)\r\n          ? [...state.activeList]\r\n          : [action.value, ...state.activeList],\r\n      }\r\n\r\n    case \"toggleNotActive\":\r\n      return {\r\n        ...state,\r\n        activeList: state.activeList.filter(el => el.id !== action.value.id),\r\n      }\r\n\r\n    default:\r\n      throw Error(\"something went wrong\")\r\n  }\r\n}\r\n\r\nexport const AppStateProvider = ({children}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  return (\r\n    <AppStateContext.Provider value={state}>\r\n      <AppDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </AppDispatchContext.Provider>\r\n    </AppStateContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAppContext = () => {\r\n  const context = useContext(AppStateContext)\r\n  if (!context) {\r\n    throw Error(\"useAppContext must be called within AppContext\")\r\n  }\r\n  return context\r\n}\r\n\r\nexport const useDispatchContext = () => {\r\n  const context = useContext(AppDispatchContext)\r\n  if (!context) {\r\n    throw Error(\"useDispatchContext must be called within AppContext\")\r\n  }\r\n  return context\r\n}\r\n\r\nexport const useLoadEmployees = () => {\r\n  const dispatch = useDispatchContext()\r\n  const storageData = useLocalStorage(\"CACHED_DATA\")\r\n  const [cachedData] = storageData\r\n\r\n  const loadEmployees = useCallback(() => {\r\n    return getData().then(data => {\r\n      if (Array.isArray(data)) {\r\n        dispatch({type: \"showEmployees\", data})\r\n        if (cachedData) {\r\n          dispatch({type: \"getDataFromCache\", cachedData})\r\n        }\r\n      } else {\r\n        dispatch({type: \"catchError\"})\r\n      }\r\n    })\r\n  }, [cachedData, dispatch])\r\n  return loadEmployees\r\n}\r\n\r\nexport const useToggleActive = () => {\r\n  const dispatch = useDispatchContext()\r\n\r\n  function toggleActive(value) {\r\n    dispatch({type: \"toggleActive\", value})\r\n  }\r\n  return toggleActive\r\n}\r\n\r\nexport const useToggleNotActive = () => {\r\n  const dispatch = useDispatchContext()\r\n\r\n  function toggleNotActive(value) {\r\n    dispatch({type: \"toggleNotActive\", value})\r\n  }\r\n  return toggleNotActive\r\n}\r\n","import {\r\n  useToggleActive,\r\n  useToggleNotActive,\r\n  useAppContext,\r\n} from \"../../context/AppContext\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst EmployeeBlock = ({employee}) => {\r\n  const toggleActive = useToggleActive()\r\n  const toggleNotActive = useToggleNotActive()\r\n  const state = useAppContext()\r\n  const checkedList = state.activeList.map(el => el.id)\r\n  const isActive = checkedList.includes(employee.id)\r\n\r\n  return (\r\n    <div className=\"employee\">\r\n      <div className={isActive ? \"fullName_active\" : \"fullName_not-active\"}>\r\n        {employee.firstName} {employee.lastName}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"not-active\"\r\n          checked={!isActive}\r\n          onChange={() => toggleNotActive(employee)}\r\n        />\r\n        <label className=\"radio_label\" htmlFor=\"not-active\">\r\n          not active\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"active\"\r\n          checked={isActive}\r\n          onChange={() => toggleActive(employee)}\r\n        />\r\n        <label className=\"radio_label\" htmlFor=\"active\">\r\n          active\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nEmployeeBlock.propTypes = {\r\n  employee: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default EmployeeBlock\r\n","import {useAppContext} from \"../../context/AppContext\"\r\nimport {prop, sortWith, ascend} from \"ramda\"\r\nimport PropTypes from \"prop-types\"\r\nimport EmployeeBlock from \"./EmployeeBlock\"\r\n\r\nconst letterDataSort = sortWith([ascend(prop(\"firstName\"))])\r\n\r\nconst LetterBlock = ({letter}) => {\r\n  const state = useAppContext()\r\n  const letterData = state.employeesList.filter(\r\n    el => el.firstName.toLowerCase().substr(0, 1) === letter.toLowerCase(),\r\n  )\r\n\r\n  return (\r\n    <div className=\"letter_container\">\r\n      <div className=\"letter\">{letter}</div>\r\n      {letterData.length > 0 ? (\r\n        <div\r\n          className={\r\n            letterData.length > 6 ? \"letter_block_withScroll\" : \"letter_block\"\r\n          }\r\n        >\r\n          {letterDataSort(letterData).map(el => (\r\n            <EmployeeBlock employee={el} key={el.id} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"letter_block\">\r\n          <p>No Employees</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nLetterBlock.propTypes = {\r\n  letter: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default LetterBlock\r\n","import LetterBlock from \"./LetterBlock\"\r\nimport {useAppContext} from \"../../context/AppContext\"\r\n\r\nconst EmployeesList = () => {\r\n  const state = useAppContext()\r\n\r\n  return (\r\n    <>\r\n      {state.error ? (\r\n        <p>Something went wrong....</p>\r\n      ) : (\r\n        <div className=\"employees_block\">\r\n          <LetterBlock letter={\"A\"} />\r\n          <LetterBlock letter={\"B\"} />\r\n          <LetterBlock letter={\"C\"} />\r\n          <LetterBlock letter={\"D\"} />\r\n          <LetterBlock letter={\"E\"} />\r\n          <LetterBlock letter={\"F\"} />\r\n          <LetterBlock letter={\"G\"} />\r\n          <LetterBlock letter={\"H\"} />\r\n          <LetterBlock letter={\"I\"} />\r\n          <LetterBlock letter={\"J\"} />\r\n          <LetterBlock letter={\"K\"} />\r\n          <LetterBlock letter={\"L\"} />\r\n          <LetterBlock letter={\"M\"} />\r\n          <LetterBlock letter={\"N\"} />\r\n          <LetterBlock letter={\"O\"} />\r\n          <LetterBlock letter={\"P\"} />\r\n          <LetterBlock letter={\"Q\"} />\r\n          <LetterBlock letter={\"R\"} />\r\n          <LetterBlock letter={\"S\"} />\r\n          <LetterBlock letter={\"T\"} />\r\n          <LetterBlock letter={\"U\"} />\r\n          <LetterBlock letter={\"V\"} />\r\n          <LetterBlock letter={\"W\"} />\r\n          <LetterBlock letter={\"X\"} />\r\n          <LetterBlock letter={\"Y\"} />\r\n          <LetterBlock letter={\"Z\"} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EmployeesList\r\n","import {useAppContext} from \"../../context/AppContext\"\r\nimport {prop, sortWith, ascend} from \"ramda\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst monthArraySort = sortWith([ascend(prop(\"lastName\"))])\r\n\r\nconst monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n]\r\nconst options = {\r\n  month: \"long\",\r\n}\r\n\r\nconst getOwnDate = date => {\r\n  const d1 = new Date(date)\r\n  return (\r\n    d1.getDate() +\r\n    \" \" +\r\n    d1.toLocaleString(\"en-US\", options) +\r\n    \",\" +\r\n    d1.getFullYear() +\r\n    \" year\"\r\n  )\r\n}\r\n\r\nconst Month = ({month}) => {\r\n  const state = useAppContext()\r\n  const monthArray = state.activeList.filter(\r\n    el => new Date(el.dob).getMonth() === month,\r\n  )\r\n\r\n  return (\r\n    <div className=\"month\">\r\n      <div className=\"month_name\">{monthNames[month]}</div>\r\n      {monthArray.length > 0 ? (\r\n        <>\r\n          {monthArraySort(monthArray).map(el => {\r\n            return (\r\n              <div className=\"month_block\" key={el.id}>\r\n                <div className=\"month-circle\"></div>\r\n                {el.firstName} {el.lastName} - {getOwnDate(el.dob)}\r\n              </div>\r\n            )\r\n          })}\r\n        </>\r\n      ) : (\r\n        <div className=\"month_empty_block\">No employees</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nMonth.propTypes = {\r\n  month: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Month\r\n","import Month from \"./Month\"\r\nimport {useAppContext} from \"../../context/AppContext\"\r\n\r\nconst getBirthMonth = (value = 0) => {\r\n  const date = new Date()\r\n  const d = date.setMonth(date.getMonth() + value)\r\n  return new Date(d).getMonth()\r\n}\r\n\r\nconst BirthdayList = () => {\r\n  const state = useAppContext()\r\n\r\n  return (\r\n    <div className=\"months_of_birth\">\r\n      {state.activeList.length > 0 ? (\r\n        <div>\r\n          <Month month={getBirthMonth()} />\r\n          <Month month={getBirthMonth(1)} />\r\n          <Month month={getBirthMonth(2)} />\r\n          <Month month={getBirthMonth(3)} />\r\n          <Month month={getBirthMonth(4)} />\r\n          <Month month={getBirthMonth(5)} />\r\n          <Month month={getBirthMonth(6)} />\r\n          <Month month={getBirthMonth(7)} />\r\n          <Month month={getBirthMonth(8)} />\r\n          <Month month={getBirthMonth(9)} />\r\n          <Month month={getBirthMonth(10)} />\r\n          <Month month={getBirthMonth(11)} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"month\">Employees List is empty</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BirthdayList\r\n","import {useEffect} from \"react\"\r\nimport EmployeesList from \"../components/employeesList/Employees list\"\r\nimport BirthdayList from \"./birthdayList/Birthday list\"\r\nimport {useLoadEmployees, useAppContext} from \"../context/AppContext\"\r\nimport useLocalStorage from \"../hooks/useLocalStorage\"\r\nimport \"./Employees.css\"\r\n\r\nconst Employees = () => {\r\n  const state = useAppContext()\r\n  const loadEmployees = useLoadEmployees()\r\n  const storageData = useLocalStorage(\"CACHED_DATA\")\r\n  const [, setCachedData] = storageData\r\n\r\n  useEffect(() => {\r\n    setCachedData(state.activeList)\r\n  }, [setCachedData, state])\r\n\r\n  useEffect(() => {\r\n    loadEmployees()\r\n  }, [loadEmployees])\r\n\r\n  return (\r\n    <div className=\"employees_container\">\r\n      <div className=\"employees_list\">\r\n        <div className=\"header\">Employees</div>\r\n        {state.loading ? <p>Loading...</p> : <EmployeesList />}\r\n      </div>\r\n\r\n      <div className=\"birthday_list\">\r\n        <div className=\"header\">Employees Birtday</div>\r\n        <BirthdayList />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Employees\r\n","import {AppStateProvider} from \"./context/AppContext\"\nimport Employees from \"./components/Employees\"\nimport \"./App.css\"\n\nconst App = () => {\n  return (\n    <AppStateProvider>\n      <div className=\"App\">\n        <Employees />\n      </div>\n    </AppStateProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n"],"sourceRoot":""}